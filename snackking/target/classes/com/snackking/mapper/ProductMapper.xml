<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snackking.mapper.ProductMapper">
	<!-- 메인페이지 리스트 -->
	<select id="getMainProductList" resultType="com.snackking.model.ProductDTO">
  		select * from product where 1=1
  		<if test='str !=null and str.equalsIgnoreCase("1")'>
			order by product_sales desc 
  		</if>
 		<if test='str !=null and str.equalsIgnoreCase("2")'>
			and discount_rate >= 30
  			order by discount_rate desc
 		</if>
  		limit 0, 8;	
  	</select>
  	
	<select id="getProduct" resultType="com.snackking.model.ProductDTO">
  		select * from product where 1 = 1
  		and product_id like #{product_id}
	</select>
	
	<select id="getCProductCount_sp" resultType="int">
  		select count(*) from product where 1 = 1
 		<if test='category.equals("8")'>
			and discount_rate >= 30
 		</if>
	</select>
	
	<select id="getCProductList_sp" resultType="com.snackking.model.ProductDTO">
	  	select * from product where 1 = 1
	  	<if test='category.equals("7")'>
			order by product_sales desc 
  		</if>
 		<if test='category.equals("8")'>
			and discount_rate >= 30
  			order by discount_rate desc
 		</if>
		limit #{start}, 20;
	</select>
	
	<select id="getCProductCount" resultType="int">
  		select count(*) from product where 1 = 1
  		and product_kind like #{category}
  		<if test='search != null'>
		and product_name like #{search}
 		</if>
	</select>
	
	<select id="getCProductList" resultType="com.snackking.model.ProductDTO">
	  	select * from product where 1 = 1
	  	and product_kind like #{category}
	  	<if test='search != null'>
		and product_name like #{search}
 		</if>
		order by product_id desc
		limit #{start}, 20;
	</select>
	
	<select id="getProductReviewCount" resultType="int">
  		select count(*) from review where 1 = 1
  		and product_id = #{product_id}
	</select>
	
	<select id="getProductReviewList" parameterType="com.snackking.model.MyBatisDTO" resultType="com.snackking.model.ReviewDTO">
  		select * from review where 1 = 1
  		and product_id like #{int1}
  		order by re_num	 desc
		limit #{int2}, 10;
	</select>

	<select id="getOrderMember" resultType="com.snackking.model.MemberDTO">
		select * from member where 1=1
		and id = #{id}
	</select>
	
	
	
	
	
	<insert id="insertOrder">
		insert into buy(buy_id, product_id, id, product_name, product_image, buy_amount, buy_price, buy_info, buyer, buyer_tel, buyer_addr, buyer_email, recipient, recipient_addr, recipient_tel) 
		values(#{buy_id}, #{product_id}, #{id}, #{product_name}, #{product_image}, #{buy_amount}, #{buy_price}, #{buy_info}, #{buyer}, #{buyer_tel}, #{buyer_addr}, #{buyer_email}, #{recipient}, #{recipient_addr}, #{recipient_tel});		
	</insert>
	
	<update id="updateQty">
		update product set product_qty = (#{product_qty} - #{buy_amount}) where 1 = 1 
		and product_id = #{product_id};
	</update>
	
</mapper>