<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snackking.mapper.ProductMapper">
	
	<select id="getMainProductList" resultType="com.snackking.model.ProductDTO">
  		select * from product where 1=1
  		<if test='str !=null and str.equalsIgnoreCase("1")'>
			order by product_sales desc 
  		</if>
 		<if test='str !=null and str.equalsIgnoreCase("2")'>
			and discount_rate >= 30
  			order by discount_rate desc
 		</if>
  		limit 0, 8;		
  	</select>
  	
	<select id="getProduct" resultType="com.snackking.model.ProductDTO">
  		select * from product where 1 = 1
  		and product_id like #{product_id}
	</select>
	
	<select id="getCProductCount_sp" resultType="int">
  		select count(*) from product where 1 = 1
  		<if test='category !=null and str.equalsIgnoreCase("7")'>
			order by product_sales desc 
  		</if>
 		<if test='category !=null and str.equalsIgnoreCase("8")'>
			and discount_rate >= 30
  			order by discount_rate desc
 		</if>
	</select>
	
	<select id="getCProductList_sp" parameterType="com.snackking.model.ProductDTO" resultType="com.snackking.model.ProductDTO">
	  	select * from product where 1 = 1
	  	<if test='category !=null and str.equalsIgnoreCase("7")'>
			order by product_sales desc 
  		</if>
 		<if test='category !=null and str.equalsIgnoreCase("8")'>
			and discount_rate >= 30
  			order by discount_rate desc
 		</if>
		limit #{int1}, 20;
	</select>
	
	<select id="getCProductCount" resultType="int">
  		select count(*) from product where 1 = 1
  		and product_kind like #{str1}
  		<if test='str2 != null'>
		and product_name like #{str2}
 		</if>
	</select>
	
	
	
	<!-- 서로다른 타입의 파라미터를 못받으므로 MyBatisDTO에 담아서 쿼리 -->
	<select id="getCProductList" parameterType="com.snackking.model.MyBatisDTO" resultType="com.snackking.model.ProductDTO">
	  	select * from product where 1 = 1
	  	and product_kind like #{str1}
	  	<if test='str2 != null'>
		and product_name like #{str2}
 		</if>
		order by product_id desc
		limit #{int1}, 20;
	</select>
	
	<select id="getProductReviewCount" resultType="int">
  		select count(*) from review where 1 = 1
  		and product_id = #{product_id}
	</select>
	
	<select id="getProductReviewList" parameterType="com.snackking.model.MyBatisDTO" resultType="com.snackking.model.ReviewDTO">
  		select * from review where 1 = 1
  		and product_id like #{int1}
  		order by re_num	 desc
		limit #{int2}, 10;
	</select>

	
	<select id="getOrderMember" resultType="com.snackking.model.MemberDTO">
		select * from member where 1=1
		and id = #{id}
			
	</select>
</mapper>